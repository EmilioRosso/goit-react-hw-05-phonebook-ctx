{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","context/ThemeContext.js","HOC/withThemeContext.js","themes/themesSetings.js","components/ContactForm/index.js","components/ContactForm/ContactForm.js","components/Filter/index.js","components/Filter/Filter.js","components/ContactListItem/index.js","components/ContactListItem/ContactListItem.js","components/ContactList/index.js","components/ContactList/ContactList.js","components/ThemeSelect/index.js","components/ThemeSelect/ThemeSelect.js","App.js","index.js"],"names":["module","exports","Context","createContext","ThemeContext","changeTheme","event","setState","name","target","value","state","onChangeTheme","Provider","this","props","children","Component","Consumer","withThemeContext","WrappedComponent","ctx","theme","themesSettings","light","color","backgroundColor","dark","ContactForm","number","handleInput","evt","handleSubmit","preventDefault","addNewContact","style","className","container","onSubmit","item","field","type","onChange","submit","disabled","Filter","filterHandler","ContactListItem","delete","onClick","onDeleteContact","ContactList","list","length","map","element","key","id","deleteContact","ThemeSelect","App","contacts","filter","saveContactToState","prevState","contact","some","alert","addContact","uuidv4","filterSave","str","toLowerCase","filterContacts","cont","includes","filterForId","filteredContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd2857dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__1INJV\",\"item\":\"ContactForm_item__3aNd9\",\"field\":\"ContactForm_field__2c9Zi\",\"submit\":\"ContactForm_submit__ChZTI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Filter_item__21cBq\",\"field\":\"Filter_field__1fRnc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__2THQn\",\"delete\":\"ContactListItem_delete__1Tx4Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","import React, { Component, createContext } from \"react\";\n\nconst Context = createContext();\n\nclass ThemeContext extends Component {\n  static Consumer = Context.Consumer;\n\n  changeTheme = event => {\n    this.setState({ name: event.target.value });\n  };\n\n  state = {\n    name: \"light\",\n    onChangeTheme: this.changeTheme\n  };\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport default ThemeContext;\n","import React from \"react\";\nimport ThemeContext from \"../context/ThemeContext\";\n\nconst withThemeContext = WrappedComponent => {\n  return function WithThemeContext(props) {\n    return (\n      <ThemeContext.Consumer>\n        {ctx => <WrappedComponent {...props} theme={ctx} />}\n      </ThemeContext.Consumer>\n    );\n  };\n};\n\nexport default withThemeContext;\n","const themesSettings = {\n  light: {\n    name: \"light\",\n    color: \"black\",\n    backgroundColor: \"white\"\n  },\n  dark: {\n    name: \"dark\",\n    color: \"white\",\n    backgroundColor: \"black\"\n  }\n};\n\nexport default themesSettings;\n","import ContactForm from \"./ContactForm\";\n\nexport default ContactForm;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport withThemeContext from \"../../HOC/withThemeContext\";\nimport style from \"./ContactForm.module.css\";\nimport themesSettings from \"../../themes/themesSetings\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\"\n  };\n\n  static propTypes = {\n    addNewContact: PropTypes.func.isRequired\n  };\n\n  handleInput = evt => {\n    this.setState({ [evt.target.name]: [evt.target.value] });\n  };\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n    this.props.addNewContact({\n      name: evt.target.name.value,\n      number: evt.target.number.value\n    });\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <div\n        style={{\n          backgroundColor:\n            themesSettings[this.props.theme.name].backgroundColor,\n          color: themesSettings[this.props.theme.name].color\n        }}\n      >\n        <h1>Phonebook</h1>\n        <form className={style.container} onSubmit={this.handleSubmit}>\n          <label className={style.item}>\n            Name\n            <input\n              className={style.field}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleInput}\n            />\n          </label>\n          <label className={style.item}>\n            Phone number\n            <input\n              className={style.field}\n              type=\"number\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleInput}\n            />\n          </label>\n          <button\n            className={style.submit}\n            type=\"submit\"\n            disabled={!name || !number}\n          >\n            Add Contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withThemeContext(ContactForm);\n","import Filter from \"./Filter\";\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport style from \"./Filter.module.css\";\nimport withThemeContext from \"../../HOC/withThemeContext\";\n\nclass Filter extends Component {\n  handleInput = evt => {\n    this.props.filterHandler(evt.target.value);\n  };\n\n  static propTypes = {\n    filterHandler: PropTypes.func.isRequired\n  };\n  render() {\n    return (\n      <label className={style.item}>\n        Find contact by name\n        <input\n          className={style.field}\n          type=\"text\"\n          name=\"filter\"\n          onChange={this.handleInput}\n        />\n      </label>\n    );\n  }\n}\n\nexport default withThemeContext(Filter);\n","import ContactListItem from \"./ContactListItem\";\n\nexport default ContactListItem;\n","import React, { Component } from \"react\";\nimport style from \"./ContactListItem.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass ContactListItem extends Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onDeleteContact: PropTypes.func.isRequired\n  };\n\n  render() {\n    return (\n      <li className={style.item}>\n        <p>\n          {this.props.name}: {this.props.number}\n        </p>\n        <button\n          className={style.delete}\n          onClick={this.props.onDeleteContact}\n          type=\"button\"\n        >\n          Удалить\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default ContactListItem;\n","import ContactList from \"./ContactList\";\n\nexport default ContactList;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport ContactListItem from \"../ContactListItem\";\nimport withThemeContext from \"../../HOC/withThemeContext\";\nimport style from \"./ContactList.module.css\";\nimport themesSettings from \"../../themes/themesSetings\";\n\nclass ContactList extends Component {\n  static propTypes = {\n    list: PropTypes.array.isRequired,\n    filter: PropTypes.string.isRequired,\n    deleteContact: PropTypes.func.isRequired\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          backgroundColor:\n            themesSettings[this.props.theme.name].backgroundColor,\n          color: themesSettings[this.props.theme.name].color\n        }}\n      >\n        {this.props.list.length > 0 && <h2>Contacts</h2>}\n        <ul className={style.list}>\n          {this.props.list.map(element => (\n            <ContactListItem\n              key={element.id}\n              name={element.name}\n              number={element.number}\n              onDeleteContact={() => this.props.deleteContact(element.id)}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withThemeContext(ContactList);\n","import ThemeSelect from \"./ThemeSelect.js\";\n\nexport default ThemeSelect;\n","import React, { Component } from \"react\";\n\nimport themesSettings from \"../../themes/themesSetings\";\nimport ThemeContext from \"../../context/ThemeContext\";\nimport withThemeContext from \"../../HOC/withThemeContext\";\n\nclass ThemeSelect extends Component {\n  render() {\n    return (\n      <ThemeContext.Consumer>\n        {ctx => (\n          <div\n            style={{\n              backgroundColor:\n                themesSettings[this.props.theme.name].backgroundColor,\n              color: themesSettings[this.props.theme.name].color\n            }}\n          >\n            <label>\n              <span>Select theme</span>\n              <select\n                name=\"themeSelect\"\n                onChange={this.props.theme.onChangeTheme}\n              >\n                <option value={themesSettings.light.name}>\n                  {themesSettings.light.name}\n                </option>\n                <option value={themesSettings.dark.name}>\n                  {themesSettings.dark.name}\n                </option>\n              </select>\n            </label>\n          </div>\n        )}\n      </ThemeContext.Consumer>\n    );\n  }\n}\n\nexport default withThemeContext(ThemeSelect);\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\n\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\nimport ThemeSelect from \"./components/ThemeSelect\";\nimport ThemeContext from \"./context/ThemeContext\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\"\n  };\n\n  saveContactToState = (prevState, name, contact) => {\n    if (prevState.contacts.some(element => element.name === name)) {\n      alert(`${name} is already exists`);\n      return;\n    }\n    const newContacts = [...prevState.contacts, contact];\n    return { contacts: newContacts };\n  };\n\n  addContact = ({ name, number }) => {\n    const contact = { id: uuidv4(), name, number };\n    this.setState(prevState => {\n      return this.saveContactToState(prevState, name, contact);\n    });\n  };\n\n  filterSave = str => {\n    this.setState({ filter: str.toLowerCase() });\n  };\n\n  filterContacts = (cont, str) => {\n    if (str === \"\") {\n      return cont;\n    } else {\n      return cont.filter(element => element.name.toLowerCase().includes(str));\n    }\n  };\n\n  filterForId = (id, prevState) => {\n    const res = prevState.contacts.filter(element => element.id !== id);\n    return { contacts: res };\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => {\n      return this.filterForId(id, prevState);\n    });\n  };\n\n  render() {\n    let filteredContacts = [];\n    if (this.state.contacts.length > 1) {\n      filteredContacts = this.filterContacts(\n        this.state.contacts,\n        this.state.filter\n      );\n    } else {\n      filteredContacts = this.state.contacts;\n    }\n    return (\n      <ThemeContext>\n        <div>\n          <ThemeSelect />\n\n          <ContactForm addNewContact={this.addContact} />\n\n          {this.state.contacts.length >= 2 && (\n            <Filter filterHandler={this.filterSave} />\n          )}\n          <ContactList\n            list={filteredContacts}\n            filter={this.state.filter}\n            deleteContact={this.deleteContact}\n          />\n        </div>\n      </ThemeContext>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}